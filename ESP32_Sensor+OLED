#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Adafruit_NeoPixel.h>
#include "HackPublisher.h"



Adafruit_SSD1306 oled(128,64,&Wire,-1);
const char *ssid="ASUS-F8";
const char *password="K33pi7$@f3%";

const int gasPin=A3;
const int gasThreshold=925;
const int RED_LED=16;
const int GREEN_LED=17;
const int speakerPin=18;
const int BUTTON_PIN=21;
const int LED_COUNT=12;
const int LED_PIN=15;
const int NOTE_DUR=60;
bool prevState=false;


Adafruit_NeoPixel ring(LED_COUNT,LED_PIN,NEO_RGBW+NEO_KHZ800);

HackPublisher publisher("Samueli Fist Fighters",true);



void setup() {
  // put your setup code here, to run once:
  Serial.begin(115200);
  pinMode(RED_LED,OUTPUT);
  pinMode(GREEN_LED,OUTPUT);
  pinMode(speakerPin, OUTPUT);
  pinMode(BUTTON_PIN,INPUT);
  pinMode(13,INPUT_PULLUP);
  
  while(!Serial)continue;
  
  WiFi.begin(ssid,password);
  while(WiFi.status()!=WL_CONNECTED){
    delay(500);
    Serial.print("Local IP Address ");
    Serial.println(WiFi.localIP());
  }
  publisher.begin();

  if(!oled.begin(SSD1306_SWITCHCAPVCC,0x3C)){
    Serial.println(F("SSD1306 allocation failed"));
    while (true);
  }
  ring.begin();
  ring.show();
  ring.setBrightness(100);
  delay(10000);
 
}

//given code for playing speaker
void play(int note, int dur)
{
  tone(speakerPin, note);
  delay(dur*NOTE_DUR);
  noTone(speakerPin); 
  delay(dur*NOTE_DUR/3);
}

void loop() {
  // put your main code here, to run repeatedly:
  int gasLevel=analogRead(gasPin);

  oled.clearDisplay();

  oled.setTextSize(1);
  oled.setTextColor(WHITE,BLACK);
  oled.setCursor(0,0);
  int buttonState=digitalRead(13);

  oled.print("Gas Level ");
  oled.println(gasLevel);
  
  //Serial.println(prevState);
  if(gasLevel>=gasThreshold){
    //oled.drawBitmap(0,0,epd_bitmap_Danger_Sign,128,64,WHITE);
    oled.println("Warning:Hazardous Gas");
    oled.display();
    digitalWrite(RED_LED,HIGH);
    digitalWrite(GREEN_LED,LOW);
    
    play(3000, 3);
  }
  else{
    //oled.drawBitmap(0,0,myBitmapSafe,128,64,WHITE);
    oled.println("Area Safe");
    oled.display();
    digitalWrite(GREEN_LED,HIGH);
    digitalWrite(RED_LED,LOW);
  }
  if (buttonState == LOW) {
    if(!prevState){
       for(uint8_t i=1;i<LED_COUNT;i++){
     ring.setPixelColor(i,ring.Color(255,255,100));}
     //ring.fill(ring.Color(255,255,255),0,12);
    ring.show();
    prevState=true;
    }
    else{
      for(int i=1;i< LED_COUNT;i++){
      ring.setPixelColor(i,ring.Color(0,0,0));
      }
      ring.show();
      prevState=false;
     }
     
  }
   
 // else if(buttonState==HIGH);{
//    for(int i=0;i< LED_COUNT;i++){
//      ring.setPixelColor(i,0,0,0);
//    }
//    ring.show();
//     delay(50);
 // }
  publisher.store("Gas_Level",gasLevel);
  if(gasLevel>=gasThreshold){
    publisher.store("Danger_Level", "Warning: Hazardous Gas_Detected");
  }
  else{
    publisher.store("Danger_Level", "Area Safe");
  }
  publisher.send();
  
  delay(10);
}
